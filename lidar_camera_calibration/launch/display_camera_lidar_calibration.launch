<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="camera" default="/usb_cam" />

    <!-- rosbag play -->
    

    <!-- <node 
        pkg="ground_removal"
        type="ground_removal_node"
        name="ground_removal"/> -->


    <include file="$(find adaptive_clustering)/launch/adaptive_clustering.launch"/>



    <!-- Nodelet manager for this pipeline -->
    <node
        pkg="nodelet"
        type="nodelet"
        args="manager"
        name="lidar_camera_manager"
        output="screen" />

    <node
        pkg="image_proc"
        type="image_proc" 
        name="image_proc_node1"
        ns="usb_cam" />

    <!-- Run image_proc/rectify nodelet -->
    <node
        pkg="nodelet"
        type="nodelet"
        name="rectify_color"
        args="load image_proc/rectify lidar_camera_manager --no-bond" >
        
        <!-- Remap input topics -->
        <remap from="image_mono" to="$(arg camera)/image_raw" />
        <remap from="camera_info" to="$(arg camera)/camera_info" />

        <!-- Remap output topics -->
        <remap from="image_rect" to="$(arg camera)/image_rect_color" />
    </node>

    <!-- Wire static transform from the world to velodyne frame -->
    <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="baselink_velodyne"
        args="0 0 0 0 0 0 base_link velodyne"/>

    <!-- <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="baselink_world"
        args=" 0.346985408640126 0.39252871597053307 -0.45691974505683824 -1.73469750514 -0.0276888879252 -1.58519134155 base_link world"/> -->
    
    <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="baselink_world"
        args=" 0.3459648489649165 0.04670814323278005 -0.37970132394897366 -1.66294819692 -0.0116270319705 -1.59549440681 base_link world"/>

    <node
        pkg="tf2_ros"
        type="static_transform_publisher"
        name="baselink_camera"
        args="0 0 0 0 0 0 world camera"/>

    <!-- <node
        pkg="tf2_ros"
        type="static_transform_publisher" 
        name="world_baselink" 
        args="-0.10018178 -0.12812744 -0.32075784 2.665484683990711 -1.5299434194456225 -1.092603131865717 world base_link" /> -->

    <!-- <node
        pkg="tf2_ros"
        type="static_transform_publisher" 
        name="world_velodyne" 
        args="-0.10018178 -0.12812744 -0.32075784 2.665484683990711 -1.5299434194456225 -1.092603131865717 world velodyne" /> -->


    <!-- Setup params for Camera-LiDAR calibration script -->
    <param name="camera_info_topic" type="str" value="$(arg camera)/camera_info" />
    <param name="image_color_topic" type="str" value="$(arg camera)/image_rect_color" />
    <param name="velodyne_points_topic" type="str" value="/adaptive_clustering/cloud_filtered" />
    <!-- <param name="velodyne_points_topic" type="str" value="/ground_less_points" /> -->
    <param name="camera_lidar_topic" type="str" value="$(arg camera)/camera_lidar" />
    <param name="yolo_box_topic" type="str" value="/darknet_ros_1/bounding_boxes" />


    <!-- Run Camera-LiDAR projection script -->
    <node   
        pkg="lidar_camera_calibration"
        type="yolonum.py"
        name="calibrate_camera_lidar"
        output="screen" />

    <!-- Run image view to display the projected points image -->
    <node 
        name="camera_lidar_projection" 
        pkg="image_view"
        type="image_view"
        respawn="false"
        output="screen">
        
        <!-- Remap input topics -->
        <remap from="image" to="$(arg camera)/camera_lidar" />
    </node>

    <!-- true or false yolo data -->
    <!-- <node
        pkg="lidar_camera_calibration"
        type="yolo_falsedata.py" 
        name="yolo_falsedata" /> -->

    <include file="$(find transform_point_cloud)/launch/demo.launch"/>


    <node
        pkg="adaptive_clustering"
        type="after_clustering"
        name="after_clustering"/>   

    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find adaptive_clustering)/launch/after_clustering.rviz"/> -->
    <!-- <node
        pkg="lidar_camera_calibration"
        type="nearmarker.py"
        name="nearmarker"/>    -->



</launch>

<!-- 1080x720 -->
<!-- 
0.68262956 0.1834501 0.08029958 0.08392293 -0.20009139 -0.97617641 -->



<!-- 640x480 -->
<!-- 
Euler angles (RPY): (-1.092603131865717, -1.5299434194456225, 2.665484683990711)
Rotation Matrix: [[-0.03629937 -0.99933944  0.00174397]
 [ 0.01871864 -0.00242474 -0.99982185]
 [ 0.99916564 -0.03626026  0.01879429]]
Translation Offsets: [[-0.10018178 -0.12812744 -0.32075784]] -->

<!-- 
reverse Rotation [[-0.03629937 0.01871864 0.99916564]
[-0.99933944 -0.00242474 -0.03626026]
[0.00174397 -0.99982250621 0.01879429]] -->
<!-- roll:  -1.5520009139155184
pitch: -0.0017439708840287184
yaw:   -1.6071037283353506 -->

<!-- 07/29 -->
<!-- Euler angles (RPY): (1.9563544261691603, -1.5263450760933643, -0.36061128086860017)
Rotation Matrix: [[ 0.04157851 -0.99883243  0.02459664]
 [-0.01567929 -0.02526718 -0.99955777]
 [ 0.99901221  0.04117446 -0.01671156]]
Translation Offsets: [[ 0.03285588 -0.40002876  0.00763797]] -->
<!-- roll:  -1.58751371799
pitch: -0.0245991157899
yaw:   -1.5291932384 -->
<!-- [[0.041578505317040104 -0.01567929467783813 0.9990122017554132
  -0.015268692415567386]
 [-0.9988324399170365 -0.025267185391141478 0.041174464788757116
  0.0223954286184902]
 [0.024596634976476184 -0.9995577637002206 -0.016711554989045627
  -0.4005323544929035]
 [0.0 0.0 0.0 1.0]] -->


<!-- 08/02
Euler angles (RPY): (-1.6585524787257986, -1.4058733350208803, -3.0273295263191655)
Rotation Matrix: [[-0.16310579 -0.98622007  0.02768535]
 [-0.01871851 -0.02496276 -0.99951312]
 [ 0.986431   -0.1635446  -0.014389  ]]
Translation Offsets: [[ 0.45636501 -0.44040363 -0.28465583]] -->
<!-- [[-0.16310578424060895 -0.018718510077604833 0.9864310018539496
  0.3469854086401263]
 [-0.9862200670491894 -0.024962758271870555 -0.1635446055428617
  0.39252871597053307]
 [0.02768535153825545 -0.9995131209865947 -0.014388999551153516
  -0.45691974505683824]
 [0.0 0.0 0.0 1.0]] -->
 <!-- roll:  -1.58519134155
pitch: -0.0276888879252
yaw:   -1.73469750514 -->