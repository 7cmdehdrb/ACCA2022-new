<launch>
<!-- tf -->
<node pkg="tf"  type="static_transform_publisher" name="world_to_map" args="0 0 0 0 0 0 /world /map 10" />
<node pkg="tf" type="static_transform_publisher" name="velodyne_pub" args="1.0 0 1.0 0.0 0.0 0.0 1.0 base_link_ndt velodyne 100" />

<arg name="tf_x" default="0.0"/>
<arg name="tf_y" default="0.0"/>
<arg name="tf_z" default="0.0"/>
<arg name="tf_yaw" default="0.0"/>
<arg name="tf_pitch" default="0.0"/>
<arg name="tf_roll" default="0.0"/>
<arg name="frame_id" default="base_link_ndt"/>
<arg name="child_frame_id" default="velodyne"/>
<arg name="period_in_ms" default="5"/>
<!-- <node pkg="tf" type="static_transform_publisher" name="base_link_to_localizer" args="$(arg tf_x) $(arg tf_y) $(arg tf_z) $(arg tf_yaw) $(arg tf_pitch) $(arg tf_roll) $(arg frame_id) $(arg child_frame_id) $(arg period_in_ms)"/> -->
<!-- <node pkg="tf"  type="static_transform_publisher" name="map_to_mobility" args="0 0 0 0 0 0 /map /mobility 10" /> -->

<!--================================================= points_map_loader =================================================-->
<arg name="scene_num" default="noupdate" />
<arg name="path_area_list" default='""' />
<arg name="path_pcd" default='/home/enbang/school.pcd' />

<node pkg="map_file" type="points_map_loader" name="points_map_loader" output="screen">
  <rosparam subst_value="true">
    area: $(arg scene_num)
    arealist_path: $(arg path_area_list)
    pcd_paths: [ $(arg path_pcd) ]
  </rosparam>
</node>

<!--================================================= voxel_grid_filter =================================================-->
<arg name="sync" default="false" />
<arg name="node_name" default="voxel_grid_filter" />
<arg name="points_topic" default="/velodyne_points2" />
<arg name="output_log" default="false" />
<arg name="measurement_range" default="200" />

<node pkg="points_downsampler" name="$(arg node_name)" type="$(arg node_name)">
  <param name="points_topic" value="$(arg points_topic)" />
  <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
  <param name="output_log" value="$(arg output_log)" />
  <param name="measurement_range" value="$(arg measurement_range)" />
</node>

<!--================================================= ndt_matching =================================================-->
  <arg name="method_type" default="0" /> <!-- pcl_generic=0, pcl_anh=1, pcl_anh_gpu=2, pcl_openmp=3 -->
  <arg name="use_gnss" default="0" />
  <arg name="use_odom" default="true" />
  <arg name="use_imu" default="false" />
  <arg name="imu_upside_down" default="false" />
  <arg name="imu_topic" default="/imu/data" />
  <arg name="queue_size" default="1" />
  <arg name="offset" default="linear" />
  <arg name="get_height" default="false" />
  <arg name="use_local_transform" default="false" />
  <arg name="output_log_data" default="false" />
  <arg name="output_tf_frame_id" default="base_link_ndt"/>
  <arg name="gnss_reinit_fitness" default="500.0" />

  <!-- tf -->
  <param name="tf_x" value="$(arg tf_x)" />
  <param name="tf_y" value="$(arg tf_y)" />
  <param name="tf_z" value="$(arg tf_z)" />
  <param name="tf_roll" value="$(arg tf_roll)" />
  <param name="tf_pitch" value="$(arg tf_pitch)" />
  <param name="tf_yaw" value="$(arg tf_yaw)" />
  <param name="localizer" value="velodyne"/>
  
  <node pkg="ndt_matching" type="ndt_matching" name="ndt_matching" output="log">
    <param name="method_type" value="$(arg method_type)" />
    <param name="use_gnss" value="$(arg use_gnss)" />
    <param name="use_odom" value="$(arg use_odom)" />
    <param name="use_imu" value="$(arg use_imu)" />
    <param name="imu_upside_down" value="$(arg imu_upside_down)" />
    <param name="imu_topic" value="$(arg imu_topic)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="offset" value="$(arg offset)" />
    <param name="get_height" value="$(arg get_height)" />
    <param name="use_local_transform" value="$(arg use_local_transform)" />
    <param name="output_log_data" value="$(arg output_log_data)" />
    <param name="output_tf_frame_id" value="$(arg output_tf_frame_id)" />
    <param name="gnss_reinit_fitness" value="$(arg gnss_reinit_fitness)" />
    <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />

  </node>

  <node pkg="map2localTF" type="map2localTF" name="map2localTF" output="screen">
  </node>

<!--================================================= ekf_localizer =================================================-->
  <arg name="show_debug_info" default="false"/>
  <arg name="enable_yaw_bias_estimation" default="True"/>
  <arg name="predict_frequency" default="50.0"/>
  <arg name="extend_state_step" default="50"/>


  <!-- for Pose measurement -->
  <arg name="use_pose_with_covariance" default="false"/>
  <arg name="input_pose_name" default="in_pose"/>
  <arg name="input_pose_with_cov_name" default="in_pose_with_covariance"/>
  <arg name="pose_additional_delay" default="0.0"/>
  <arg name="pose_measure_uncertainty_time" default="0.01"/>
  <arg name="pose_rate" default="10.0"/>
  <arg name="pose_gate_dist" default="10000.0"/>
  <arg name="pose_stddev_x" default="0.05"/>
  <arg name="pose_stddev_y" default="0.05"/>
  <arg name="pose_stddev_yaw" default="0.025"/>

  <!-- for twist measurement -->
  <arg name="use_twist_with_covariance" default="false"/>
  <arg name="input_twist_name" default="in_twist"/>
  <arg name="input_twist_with_cov_name" default="in_twist_with_covariance"/>
  <arg name="twist_additional_delay" default="0.0"/>
  <arg name="twist_rate" default="10.0"/>
  <arg name="twist_gate_dist" default="10000.0"/>
  <arg name="twist_stddev_vx" default="0.2"/>
  <arg name="twist_stddev_wz" default="0.03"/>

  <!-- for process model -->
  <arg name="proc_stddev_yaw_c" default="0.005"/>
  <arg name="proc_stddev_yaw_bias_c" default="0.001"/>
  <arg name="proc_stddev_vx_c" default="0.1"/>
  <arg name="proc_stddev_wz_c" default="0.05"/>


  <node pkg="ekf_localizer" type="ekf_localizer" name="ekf_localizer" output="screen">

    <remap unless="$(arg use_pose_with_covariance)" from="in_pose" to="$(arg input_pose_name)"/>
    <remap unless="$(arg use_pose_with_covariance)" from="in_pose_with_covariance" to="input_pose_with_cov_UNUSED"/>
    <remap if="$(arg use_pose_with_covariance)" from="in_pose" to="input_pose_UNUSED"/>
    <remap if="$(arg use_pose_with_covariance)" from="in_pose_with_covariance" to="$(arg input_pose_with_cov_name)"/>

    <remap unless="$(arg use_twist_with_covariance)" from="in_twist" to="$(arg input_twist_name)"/>
    <remap unless="$(arg use_twist_with_covariance)" from="in_twist_with_covariance" to="input_twist_with_covariance_UNUSED"/>
    <remap if="$(arg use_twist_with_covariance)" from="in_twist" to="input_twist_UNUSED"/>
    <remap if="$(arg use_twist_with_covariance)" from="in_twist_with_covariance" to="$(arg input_twist_with_cov_name)"/>

    <remap from="initialpose" to="/initialpose"/>

    <param name="pose_frame_id" value="map"/>
    <param name="output_frame_id" value="base_link"/>

    <param name="show_debug_info" value="$(arg show_debug_info)"/>
    <param name="enable_yaw_bias_estimation" value="$(arg enable_yaw_bias_estimation)"/>

    <param name="predict_frequency" value="$(arg predict_frequency)"/>
    <param name="extend_state_step" value="$(arg extend_state_step)"/>

    <param name="use_pose_with_covariance" value="$(arg use_pose_with_covariance)"/>
    <param name="pose_additional_delay" value="$(arg pose_additional_delay)"/>
    <param name="pose_measure_uncertainty_time" value="$(arg pose_measure_uncertainty_time)"/>
    <param name="pose_rate" value="$(arg pose_rate)"/>
    <param name="pose_gate_dist" value="$(arg pose_gate_dist)"/>
    <param name="pose_stddev_x" value="$(arg pose_stddev_x)"/>
    <param name="pose_stddev_y" value="$(arg pose_stddev_y)"/>
    <param name="pose_stddev_yaw" value="$(arg pose_stddev_yaw)"/>

    <param name="use_twist_with_covariance" value="$(arg use_twist_with_covariance)"/>
    <param name="twist_additional_delay" value="$(arg twist_additional_delay)"/>
    <param name="twist_rate" value="$(arg twist_rate)"/>
    <param name="twist_gate_dist" value="$(arg twist_gate_dist)"/>
    <param name="twist_stddev_vx" value="$(arg twist_stddev_vx)"/>
    <param name="twist_stddev_wz" value="$(arg twist_stddev_wz)"/>

    <param name="proc_stddev_yaw_c" value="$(arg proc_stddev_yaw_c)"/>
    <param name="proc_stddev_yaw_bias_c" value="$(arg proc_stddev_yaw_bias_c)"/>
    <param name="proc_stddev_vx_c" value="$(arg proc_stddev_vx_c)"/>
    <param name="proc_stddev_wz_c" value="$(arg proc_stddev_wz_c)"/>

  </node>
  
</launch>
