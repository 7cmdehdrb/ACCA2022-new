<launch>
    <!-- tf -->
    <node pkg="tf" type="static_transform_publisher" name="velodyne_link" args="0.0 0.0 0.0 0.0 0.0 0.0 1.0 base_link velodyne 100" />
  
    <arg name="tf_x" default="0.0"/>
    <arg name="tf_y" default="0.0"/>
    <arg name="tf_z" default="0.0"/>
    <arg name="tf_yaw" default="0.0"/>
    <arg name="tf_pitch" default="0.0"/>
    <arg name="tf_roll" default="0.0"/>
    <arg name="frame_id" default="base_link"/>
    <arg name="child_frame_id" default="velodyne"/>
    <arg name="period_in_ms" default="5"/>
    
    <!--================================================= points_map_loader =================================================-->
    <arg name="scene_num" default="noupdate" />
    <arg name="path_area_list" default='""' />    

    <arg name="path_pcd" default='$(find map_matching_localization)/data/bs.pcd' />
    <node pkg="map_file" type="points_map_loader" name="points_map_loader" output="screen">
        <rosparam subst_value="true">
            area: $(arg scene_num)
            arealist_path: $(arg path_area_list)
            pcd_paths: [ $(arg path_pcd) ]
        </rosparam>
    </node>

    <!--================================================= voxel_grid_filter =================================================-->
    <arg name="sync" default="false" />
    <arg name="node_name" default="voxel_grid_filter" />
    <arg name="points_topic" default="/velodyne_points" />
    <arg name="output_log" default="false" />
    <arg name="measurement_range" default="50" />
    
    <node pkg="points_downsampler" name="$(arg node_name)" type="$(arg node_name)">
        <param name="points_topic" value="$(arg points_topic)" />
        <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
        <param name="output_log" value="$(arg output_log)" />
        <param name="measurement_range" value="$(arg measurement_range)" />
    </node>
    
    <!--================================================= ndt_matching =================================================-->
    <arg name="method_type" default="0" /> <!-- pcl_generic=0, pcl_anh=1, pcl_anh_gpu=2, pcl_openmp=3 -->
    <arg name="use_gnss" default="0" />
    <arg name="use_odom" default="false" />
    <arg name="use_imu" default="false" />
    <arg name="imu_upside_down" default="false" />
    <arg name="imu_topic" default="/imu/data" />
    <arg name="queue_size" default="1" />
    <arg name="offset" default="linear" />
    <arg name="get_height" default="false" />
    <arg name="use_local_transform" default="false" />
    <arg name="output_log_data" default="false" />
    <arg name="output_tf_frame_id" default="base_link"/>
    <arg name="gnss_reinit_fitness" default="500.0" />
    <arg name="is_publish_tf" default="false" />
    
    <!-- tf -->
    <param name="tf_x" value="$(arg tf_x)" />
    <param name="tf_y" value="$(arg tf_y)" />
    <param name="tf_z" value="$(arg tf_z)" />
    <param name="tf_roll" value="$(arg tf_roll)" />
    <param name="tf_pitch" value="$(arg tf_pitch)" />
    <param name="tf_yaw" value="$(arg tf_yaw)" />
    <param name="localizer" value="velodyne"/>
      
    <node pkg="ndt_matching" type="ndt_matching" name="ndt_matching" output="log">
        <param name="method_type" value="$(arg method_type)" />
        <param name="use_gnss" value="$(arg use_gnss)" />
        <param name="use_odom" value="$(arg use_odom)" />
        <param name="use_imu" value="$(arg use_imu)" />
        <param name="imu_upside_down" value="$(arg imu_upside_down)" />
        <param name="imu_topic" value="$(arg imu_topic)" />
        <param name="queue_size" value="$(arg queue_size)" />
        <param name="offset" value="$(arg offset)" />
        <param name="get_height" value="$(arg get_height)" />
        <param name="use_local_transform" value="$(arg use_local_transform)" />
        <param name="output_log_data" value="$(arg output_log_data)" />
        <param name="output_tf_frame_id" value="$(arg output_tf_frame_id)" />
        <param name="gnss_reinit_fitness" value="$(arg gnss_reinit_fitness)" />
        <param name="is_publish_tf" value="$(arg is_publish_tf)" />
        <remap from="/points_raw" to="/sync_drivers/points_raw" if="$(arg sync)" />
        <remap from="vehicle/odom" to="odometry/kalman" />
    </node>
</launch>